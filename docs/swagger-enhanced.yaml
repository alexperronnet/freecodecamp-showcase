openapi: 3.0.0
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0-beta'
  termsOfService: 'http://swagger.io/terms/'
servers:
  - url: http://localhost:3001/api/v2-beta
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      requestBody:
        description: Login Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        description: Signup Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Signup Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      requestBody:
        description: Update user profile attributes
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile retrieved successully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - BearerAuth: []
      tags:
        - Transactions Module
      summary: Fetch all transactions or transactions for a specific account
      description: API for fetching transactions. If accountId query parameter is provided, only transactions for the specified account are returned. Transactions can be filtered by date range.
      parameters:
        - in: query
          name: accountId
          description: ID of the account to fetch transactions for
          schema:
            type: string
        - in: query
          name: startDate
          description: Start date for filtering transactions (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          description: End date for filtering transactions (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - in: query
          name: page
          description: Page number for pagination
          schema:
            type: integer
        - in: query
          name: size
          description: Number of records per page
          schema:
            type: integer
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transactions fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    post:
      security:
        - BearerAuth: []
      tags:
        - Transactions Module
      summary: Create a new transaction
      description: API for creating a new transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      requestBody:
        description: New transaction details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions/{transactionId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Transactions Module
      summary: Fetch transaction details
      description: API for fetching the details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to fetch
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - BearerAuth: []
      tags:
        - Transactions Module
      summary: Update a transaction
      description: API for updating a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      requestBody:
        description: Updated transaction details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - BearerAuth: []
      tags:
        - Transactions Module
      summary: Delete a transaction
      description: API for deleting a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to delete
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Transaction deleted successfully
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
    Login:
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    TransactionRequest:
      type: object
      properties:
        accountId:
          type: string
          description: Account ID that the transaction belongs to
        type:
          type: string
          description: Type of the transaction
          enum: [checking, savings, credit]
        amount:
          type: number
          description: Amount of the transaction
        date:
          type: string
          format: date-time
          description: Date of the transaction
    TransactionResponse:
      type: object
      properties:
        id:
          type: string
          description: Transaction ID
        accountId:
          type: string
          description: Account ID that the transaction belongs to
        type:
          type: string
          description: Type of the transaction
        amount:
          type: number
          description: Amount of the transaction
        date:
          type: string
          format: date-time
          description: Date of the transaction
    TransactionListResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponse'
        page:
          type: integer
          description: Current page number
        size:
          type: integer
          description: Number of records per page
        totalRecords:
          type: integer
          description: Total number of records
